import{r as i,o as l,c as o,a as e,b as a,F as r,e as t,d as s}from"./app.eea8c490.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const c={},u=t(`<h1 id="misskey-setup-and-installation-guide" tabindex="-1"><a class="header-anchor" href="#misskey-setup-and-installation-guide" aria-hidden="true">#</a> Misskey Setup and Installation Guide</h1><p>We thank you for your interest in setting up your Misskey server! This guide describes how to install and setup Misskey.</p><hr><h2 id="_1-create-misskey-user" tabindex="-1"><a class="header-anchor" href="#_1-create-misskey-user" aria-hidden="true">#</a> <em>1.</em> Create Misskey user</h2><p>Running misskey as root is not a good idea so we create a user for that. In debian for exemple :</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>adduser --disabled-password --disabled-login misskey
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_2-install-dependencies" tabindex="-1"><a class="header-anchor" href="#_2-install-dependencies" aria-hidden="true">#</a> <em>2.</em> Install dependencies</h2><p>Please install and setup these softwares:</p><h4 id="dependencies" tabindex="-1"><a class="header-anchor" href="#dependencies" aria-hidden="true">#</a> Dependencies \u{1F4E6}</h4>`,9),p={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},h=s("Node.js"),m=s(" (16.x)"),y={href:"https://www.postgresql.org/",target:"_blank",rel:"noopener noreferrer"},b=s("PostgreSQL"),_=s(" (12.x / 13.x is preferred)"),g={href:"https://redis.io/",target:"_blank",rel:"noopener noreferrer"},k=s("Redis"),f=e("h5",{id:"optional",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#optional","aria-hidden":"true"},"#"),s(" Optional")],-1),x={href:"https://yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"},v=s("Yarn"),w=s(),E=e("em",null,[s("Optional but recommended for security reason. If you won't install it, use "),e("code",null,"npx yarn"),s(" instead of "),e("code",null,"yarn"),s(".")],-1),N={href:"https://www.ffmpeg.org/",target:"_blank",rel:"noopener noreferrer"},I=s("FFmpeg"),M=e("h2",{id:"_3-install-misskey",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-install-misskey","aria-hidden":"true"},"#"),s(),e("em",null,"3."),s(" Install Misskey")],-1),D=e("li",null,[e("p",null,"Connect to misskey user."),e("p",null,[e("code",null,"su - misskey")])],-1),S=e("li",null,[e("p",null,"Clone the misskey repo from master branch."),e("p",null,[e("code",null,"git clone --recursive -b master git+https://github.com/misskey-dev/misskey.git")])],-1),C=e("li",null,[e("p",null,"Navigate to misskey directory"),e("p",null,[e("code",null,"cd misskey")])],-1),V=s("Checkout to the "),O={href:"https://github.com/misskey-dev/misskey/releases/latest",target:"_blank",rel:"noopener noreferrer"},B=s("latest release"),L=e("p",null,[e("code",null,"git checkout master")],-1),R=e("li",null,[e("p",null,"Checkout submodules"),e("p",null,[e("code",null,"git submodule update --init")])],-1),j=e("li",null,[e("p",null,"Install misskey dependencies."),e("p",null,[e("code",null,"yarn install")])],-1),F=t(`<h2 id="_4-configure-misskey" tabindex="-1"><a class="header-anchor" href="#_4-configure-misskey" aria-hidden="true">#</a> <em>4.</em> Configure Misskey</h2><ol><li><p>Copy the <code>.config/example.yml</code> and rename it to <code>default.yml</code>.</p><p><code>cp .config/example.yml .config/default.yml</code></p></li><li><p>Edit <code>default.yml</code></p></li></ol><h2 id="_5-build-misskey" tabindex="-1"><a class="header-anchor" href="#_5-build-misskey" aria-hidden="true">#</a> <em>5.</em> Build Misskey</h2><p>Build misskey with the following:</p><p><code>NODE_ENV=production yarn build</code></p><p>If you&#39;re on Debian, you will need to install the <code>build-essential</code>, <code>python</code> package.</p><p>If you&#39;re still encountering errors about some modules, use node-gyp:</p><ol><li><code>npx node-gyp configure</code></li><li><code>npx node-gyp build</code></li><li><code>NODE_ENV=production yarn build</code></li></ol><h2 id="_6-init-db" tabindex="-1"><a class="header-anchor" href="#_6-init-db" aria-hidden="true">#</a> <em>6.</em> Init DB</h2><ol><li><p>Create the appropriate PostgreSQL users with respective passwords, and empty database as named in the configuration file. Make sure the database connection also works correctly when run from the user that will later run Misskey, or it could cause problems later.</p></li><li><p>Run the database initialisation <code>yarn run init</code></p></li></ol><h2 id="_7-that-is-it" tabindex="-1"><a class="header-anchor" href="#_7-that-is-it" aria-hidden="true">#</a> <em>7.</em> That is it.</h2><p>Well done! Now, you have an environment that run to Misskey.</p><h3 id="launch-normally" tabindex="-1"><a class="header-anchor" href="#launch-normally" aria-hidden="true">#</a> Launch normally</h3><p>Just <code>NODE_ENV=production npm start</code>. GLHF!</p><h3 id="launch-with-systemd" tabindex="-1"><a class="header-anchor" href="#launch-with-systemd" aria-hidden="true">#</a> Launch with systemd</h3><ol><li><p>Create a systemd service here</p><p><code>/etc/systemd/system/misskey.service</code></p></li><li><p>Edit it, and paste this and save:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[Unit]
Description=Misskey daemon

[Service]
Type=simple
User=misskey
ExecStart=/usr/bin/npm start
WorkingDirectory=/home/misskey/misskey
Environment=&quot;NODE_ENV=production&quot;
TimeoutSec=60
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=misskey
Restart=always

[Install]
WantedBy=multi-user.target
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></li><li><p>Reload systemd and enable the misskey service.</p><p><code>systemctl daemon-reload ; systemctl enable misskey</code></p></li><li><p>Start the misskey service.</p><p><code>systemctl start misskey</code></p></li></ol><p>You can check if the service is running with <code>systemctl status misskey</code>.</p><h3 id="how-to-update-your-misskey-server-to-the-latest-version" tabindex="-1"><a class="header-anchor" href="#how-to-update-your-misskey-server-to-the-latest-version" aria-hidden="true">#</a> How to update your Misskey server to the latest version</h3><ol><li><code>git checkout master</code></li><li><code>git pull</code></li><li><code>git submodule update --init</code></li><li><code>yarn install</code></li><li><code>NODE_ENV=production yarn build</code></li><li><code>yarn migrate</code></li><li>Restart your Misskey process to apply changes</li><li>Enjoy</li></ol><p>If you encounter any problems with updating, please try the following:</p><ol><li><code>yarn clean</code> or <code>yarn cleanall</code></li><li>Retry update (Don&#39;t forget <code>yarn install</code></li></ol><hr><p>If you have any questions or troubles, feel free to contact us!</p>`,23);function T(q,W){const n=i("ExternalLinkIcon");return l(),o(r,null,[u,e("ul",null,[e("li",null,[e("strong",null,[e("a",p,[h,a(n)])]),m]),e("li",null,[e("strong",null,[e("a",y,[b,a(n)])]),_]),e("li",null,[e("strong",null,[e("a",g,[k,a(n)])])])]),f,e("ul",null,[e("li",null,[e("a",x,[v,a(n)]),w,E]),e("li",null,[e("a",N,[I,a(n)])])]),M,e("ol",null,[D,S,C,e("li",null,[e("p",null,[V,e("a",O,[B,a(n)])]),L]),R,j]),F],64)}var H=d(c,[["render",T]]);export{H as default};
