"use strict";(self.webpackChunkmisskey_hub=self.webpackChunkmisskey_hub||[]).push([[742],{177:(e,l,d)=>{d.r(l),d.d(l,{default:()=>D});var s=d(6252);const a=(0,s._)("h1",{id:"dockerを使ったmisskey構築方法",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#dockerを使ったmisskey構築方法","aria-hidden":"true"},"#"),(0,s.Uk)(" Dockerを使ったMisskey構築方法")],-1),t=(0,s._)("p",null,"このガイドはDockerを使ったMisskeyセットアップ方法について解説します。",-1),i=(0,s._)("h2",{id:"_1-misskeyのダウンロード",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_1-misskeyのダウンロード","aria-hidden":"true"},"#"),(0,s.Uk)(),(0,s._)("em",null,"1."),(0,s.Uk)(" Misskeyのダウンロード")],-1),r=(0,s._)("li",null,[(0,s._)("p",null,"masterブランチからMisskeyレポジトリをクローン"),(0,s._)("p",null,[(0,s._)("code",null,"git clone -b master git://github.com/misskey-dev/misskey.git")])],-1),n=(0,s._)("li",null,[(0,s._)("p",null,"misskeyディレクトリに移動"),(0,s._)("p",null,[(0,s._)("code",null,"cd misskey")])],-1),c={href:"https://github.com/misskey-dev/misskey/releases/latest",target:"_blank",rel:"noopener noreferrer"},o=(0,s.Uk)("最新のリリース"),h=(0,s.Uk)("を確認"),u=(0,s._)("p",null,[(0,s._)("code",null,"git checkout master")],-1),m=(0,s.uE)('<h2 id="_2-設定ファイルの作成と編集" tabindex="-1"><a class="header-anchor" href="#_2-設定ファイルの作成と編集" aria-hidden="true">#</a> <em>2.</em> 設定ファイルの作成と編集</h2><p>下記コマンドで設定ファイルを作成してください。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> .config\n<span class="token function">cp</span> example.yml default.yml\n<span class="token function">cp</span> docker_example.env docker.env\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="default-ymlの編集" tabindex="-1"><a class="header-anchor" href="#default-ymlの編集" aria-hidden="true">#</a> <code>default.yml</code>の編集</h3><p>非Docker環境と同じ様に編集してください。<br> ただし、Postgresql、RedisとElasticsearchのホストは<code>localhost</code>ではなく、<code>docker-compose.yml</code>で設定されたサービス名になっています。<br> 標準設定では次の通りです。</p><table><thead><tr><th>サービス</th><th>ホスト名</th></tr></thead><tbody><tr><td>Postgresql</td><td><code>db</code></td></tr><tr><td>Redis</td><td><code>redis</code></td></tr><tr><td>Elasticsearch</td><td><code>es</code></td></tr></tbody></table><h3 id="docker-envの編集" tabindex="-1"><a class="header-anchor" href="#docker-envの編集" aria-hidden="true">#</a> <code>docker.env</code>の編集</h3><p>このファイルはPostgresqlの設定を記述します。<br> 最低限記述する必要がある設定は次の通りです。</p><table><thead><tr><th>設定</th><th>内容</th></tr></thead><tbody><tr><td><code>POSTGRES_PASSWORD</code></td><td>パスワード</td></tr><tr><td><code>POSTGRES_USER</code></td><td>ユーザー名</td></tr><tr><td><code>POSTGRES_DB</code></td><td>データベース名</td></tr></tbody></table><h2 id="_3-dockerの設定" tabindex="-1"><a class="header-anchor" href="#_3-dockerの設定" aria-hidden="true">#</a> <em>3.</em> Dockerの設定</h2><p><code>docker-compose.yml</code>を編集してください。</p><h2 id="_4-misskeyのビルド" tabindex="-1"><a class="header-anchor" href="#_4-misskeyのビルド" aria-hidden="true">#</a> <em>4.</em> Misskeyのビルド</h2><p>次のコマンドでMisskeyをビルドしてください:</p><p><code>docker-compose build</code></p><h2 id="_5-データベースを初期化" tabindex="-1"><a class="header-anchor" href="#_5-データベースを初期化" aria-hidden="true">#</a> <em>5.</em> データベースを初期化</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>docker-compose run --rm web <span class="token function">yarn</span> run init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_6-以上です" tabindex="-1"><a class="header-anchor" href="#_6-以上です" aria-hidden="true">#</a> <em>6.</em> 以上です！</h2><p>お疲れ様でした。これでMisskeyを動かす準備は整いました。</p><h3 id="通常起動" tabindex="-1"><a class="header-anchor" href="#通常起動" aria-hidden="true">#</a> 通常起動</h3><p><code>docker-compose up -d</code>するだけです。GLHF!</p><h3 id="misskeyを最新バージョンにアップデートする方法" tabindex="-1"><a class="header-anchor" href="#misskeyを最新バージョンにアップデートする方法" aria-hidden="true">#</a> Misskeyを最新バージョンにアップデートする方法:</h3>',21),k=(0,s._)("li",null,[(0,s._)("code",null,"git stash")],-1),p=(0,s._)("li",null,[(0,s._)("code",null,"git checkout master")],-1),_=(0,s._)("li",null,[(0,s._)("code",null,"git pull")],-1),b=(0,s._)("li",null,[(0,s._)("code",null,"git submodule update --init")],-1),y=(0,s._)("li",null,[(0,s._)("code",null,"git stash pop")],-1),g=(0,s._)("li",null,[(0,s._)("code",null,"docker-compose build")],-1),f=(0,s.Uk)("ChangeLog"),v=(0,s.Uk)("でマイグレーション情報を確認する"),x=(0,s._)("li",null,[(0,s._)("code",null,"docker-compose stop && docker-compose up -d")],-1),M=(0,s._)("h3",{id:"cliコマンドを実行する方法",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#cliコマンドを実行する方法","aria-hidden":"true"},"#"),(0,s.Uk)(" cliコマンドを実行する方法:")],-1),S=(0,s._)("p",null,[(0,s._)("code",null,"docker-compose run --rm web node built/tools/mark-admin @example")],-1),D={render:function(e,l){const d=(0,s.up)("OutboundLink"),D=(0,s.up)("RouterLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[a,t,i,(0,s._)("ol",null,[r,n,(0,s._)("li",null,[(0,s._)("p",null,[(0,s._)("a",c,[o,(0,s.Wm)(d)]),h]),u])]),m,(0,s._)("ol",null,[k,p,_,b,y,g,(0,s._)("li",null,[(0,s.Wm)(D,{to:"/docs/CHANGELOG.html"},{default:(0,s.w5)((()=>[f])),_:1}),v]),x]),M,S],64)}}},755:(e,l,d)=>{d.r(l),d.d(l,{data:()=>s});const s={key:"v-f4c8fb2c",path:"/docs/install/docker.html",title:"Dockerを使ったMisskey構築方法",lang:"ja-JP",frontmatter:{},excerpt:"",headers:[{level:2,title:"1. Misskeyのダウンロード",slug:"_1-misskeyのダウンロード",children:[]},{level:2,title:"2. 設定ファイルの作成と編集",slug:"_2-設定ファイルの作成と編集",children:[{level:3,title:"default.ymlの編集",slug:"default-ymlの編集",children:[]},{level:3,title:"docker.envの編集",slug:"docker-envの編集",children:[]}]},{level:2,title:"3. Dockerの設定",slug:"_3-dockerの設定",children:[]},{level:2,title:"4. Misskeyのビルド",slug:"_4-misskeyのビルド",children:[]},{level:2,title:"5. データベースを初期化",slug:"_5-データベースを初期化",children:[]},{level:2,title:"6. 以上です！",slug:"_6-以上です",children:[{level:3,title:"通常起動",slug:"通常起動",children:[]},{level:3,title:"Misskeyを最新バージョンにアップデートする方法:",slug:"misskeyを最新バージョンにアップデートする方法",children:[]},{level:3,title:"cliコマンドを実行する方法:",slug:"cliコマンドを実行する方法",children:[]}]}],filePathRelative:"docs/install/docker.md",git:{updatedTime:1631291596e3,contributors:[{name:"syuilo",email:"Syuilotan@yahoo.co.jp",commits:1}]}}}}]);