"use strict";(self.webpackChunkmisskey_hub=self.webpackChunkmisskey_hub||[]).push([[6393],{4617:(e,s,a)=>{a.r(s),a.d(s,{default:()=>x});var l=a(6252);const i=(0,l.uE)('<h1 id="misskey-install-shell-script-v1-4-0" tabindex="-1"><a class="header-anchor" href="#misskey-install-shell-script-v1-4-0" aria-hidden="true">#</a> Misskey install shell script v1.4.0</h1><p>Misskeyを簡単にインストールするためのシェルスクリプトができました！</p><p>いくつかの質問に答えるだけで、UbuntuサーバーへMisskey(v12)を簡単にインストールできます！</p><p>また、アップデートスクリプトもあります。</p><h2 id="ライセンス" tabindex="-1"><a class="header-anchor" href="#ライセンス" aria-hidden="true">#</a> ライセンス</h2><p><a href="./LICENSE">MIT License</a></p><h2 id="準備するもの" tabindex="-1"><a class="header-anchor" href="#準備するもの" aria-hidden="true">#</a> 準備するもの</h2><ol><li>ドメイン</li><li>Ubuntuがインストールされたサーバー</li><li>Cloudflareアカウント（推奨）</li></ol><p>Let&#39;s Encryptの認証を試行できる回数が少ないので、サーバーのネットワークやDNSの設定を十分確認してからインストールを開始してください。</p><h2 id="cloudflareの設定" tabindex="-1"><a class="header-anchor" href="#cloudflareの設定" aria-hidden="true">#</a> Cloudflareの設定</h2><p>Cloudflareを使う場合、Cloudflareのドメインの設定を完了してからインストールを開始するようにしてください。<br> ネームサーバーの適用には最大で3日程度かかる場合があります。</p><p>また、nginxとCloudflareを設定する場合、Cloudflareの設定画面にて、</p><ul><li>DNSを設定してください。</li><li>SSL/TLS設定にて、暗号化モードを「フル」に設定してください。</li></ul><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作" aria-hidden="true">#</a> 操作</h2><h3 id="_1-ssh" tabindex="-1"><a class="header-anchor" href="#_1-ssh" aria-hidden="true">#</a> 1. SSH</h3><p>サーバーにSSH接続します。<br> （サーバーのデスクトップを開いている方はシェルを開きましょう。）</p><h3 id="_2-環境を最新にする" tabindex="-1"><a class="header-anchor" href="#_2-環境を最新にする" aria-hidden="true">#</a> 2. 環境を最新にする</h3><p>すべてのパッケージを最新にし、再起動します。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo apt update; sudo apt full-upgrade -y; sudo reboot\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_3-インストールをはじめる" tabindex="-1"><a class="header-anchor" href="#_3-インストールをはじめる" aria-hidden="true">#</a> 3. インストールをはじめる</h3><p>SSHを接続しなおして、Misskeyのインストールを始めましょう。</p><p>ただ、インストール前に<a href="#Tips">Tips</a>を読むことを強くお勧めします。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>wget https://raw.githubusercontent.com/joinmisskey/bash-install/main/ubuntu.sh -O ubuntu.sh; sudo bash ubuntu.sh\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>example.comは自分のドメインに置き換えてください。</p><h3 id="_4-アップデートする" tabindex="-1"><a class="header-anchor" href="#_4-アップデートする" aria-hidden="true">#</a> 4. アップデートする</h3><p>アップデートのためのスクリプトもあります。</p><p>まずはダウンロードします。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>wget https://raw.githubusercontent.com/joinmisskey/bash-install/main/update.ubuntu.sh -O update.sh\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>アップデートしたいときにスクリプトを実行してください。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo bash update.sh\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>systemd環境では、<code>-r</code>オプションでシステムのアップデートと再起動を行うことができます。</li><li>docker環境では、引数に更新後のリポジトリ名:タグ名を指定することができます。</li></ul><h2 id="動作を確認した環境" tabindex="-1"><a class="header-anchor" href="#動作を確認した環境" aria-hidden="true">#</a> 動作を確認した環境</h2><h3 id="oracle-cloud-infrastructure" tabindex="-1"><a class="header-anchor" href="#oracle-cloud-infrastructure" aria-hidden="true">#</a> Oracle Cloud Infrastructure</h3><p>このスクリプトは、Oracle Cloud InfrastructureのAlways Freeサービスで提供されている2種類のシェイプのいずれにおいても動作します。</p><ul><li>VM.Standard.E2.1.Micro (AMD)</li><li>VM.Standard.A1.Flex (ARM) [1OCPU RAM6GB or greater]</li></ul><p>iptablesを使うようにしてください。</p><h2 id="issues-prs-welcome" tabindex="-1"><a class="header-anchor" href="#issues-prs-welcome" aria-hidden="true">#</a> Issues &amp; PRs Welcome</h2><p>上記の環境で動作しない場合、バグの可能性があります。インストールの際に指定された条件を記載の上、GitHubのIssue機能にてご報告いただければ幸いです。</p><p>上記以外の環境についてのサポートは難しいですが、状況を詳しくお教えいただければ解決できる可能性があります。</p><p>機能の提案についても歓迎いたします。</p><h1 id="tips" tabindex="-1"><a class="header-anchor" href="#tips" aria-hidden="true">#</a> Tips</h1><p>選択肢の選び方や仕様についてなど。</p><h2 id="systemd-or-docker" tabindex="-1"><a class="header-anchor" href="#systemd-or-docker" aria-hidden="true">#</a> Systemd or Docker?</h2><p>v1から、インストールメソッドにsystemdとDockerとを選べるようにしました。</p>',44),r=(0,l.Uk)("Dockerと言っても、"),n=(0,l._)("strong",null,"MisskeyだけをDockerで実行",-1),d=(0,l.Uk)("し、RedisやPostgresなどはホストで直接実行します。"),t=(0,l._)("br",null,null,-1),c={href:"https://gist.github.com/mamemomonga/5549bb69cad8e5618e5527593d4890e0",target:"_blank",rel:"noopener noreferrer"},o=(0,l.Uk)("docker-composeですべての機能を動かす方法については、mamemonongaさんが作成したこちらの記事がおすすめです。"),h=(0,l.uE)('<p>Docker Hubイメージを使う設定であれば、Misskeyのビルドが不要になるため、<strong>一番お勧めです</strong>。<br> ただし、マイグレーションは必要なので、アップデート時にMisskeyを使えない時間がゼロになるわけではありません。<br> また、Misskeyのビルド環境を準備しない(git pullしない)ので、フォークを動かしたくなった時に設定が面倒になります。</p><p>ローカルでDockerをビルドする方式は、パフォーマンス面で非推奨です。</p><p>systemdは、Docker Hubにイメージを上げるまでもないものの、フォークを使いたい場合にお勧めです。</p><p>お勧めする順番は次の通りです。</p><ol><li>Docker Hub</li><li>systemd</li><li>Dockerビルド</li></ol><h2 id="nginxを使うかどうか" tabindex="-1"><a class="header-anchor" href="#nginxを使うかどうか" aria-hidden="true">#</a> nginxを使うかどうか</h2><p>サーバー1台でMisskeyを構築する場合は、nginxの使用をお勧めします。</p>',7),u=(0,l.Uk)("ロードバランサーを設置する場合にはnginxをインストールせず、"),p={href:"https://github.com/misskey-dev/misskey/blob/develop/docs/examples/misskey.nginx",target:"_blank",rel:"noopener noreferrer"},m=(0,l.Uk)("Misskeyのnginx設定"),b=(0,l.Uk)("を参考にロードバランサーを設定するのがよいと思います。"),k=(0,l.uE)('<h2 id="add-more-swaps" tabindex="-1"><a class="header-anchor" href="#add-more-swaps" aria-hidden="true">#</a> Add more swaps!</h2><p>スワップを設定している場合、メモリが合計で3GB以上でなければスクリプトが動作しないようになっています。</p><h2 id="途中で失敗してまたスクリプトを実行する場合" tabindex="-1"><a class="header-anchor" href="#途中で失敗してまたスクリプトを実行する場合" aria-hidden="true">#</a> 途中で失敗してまたスクリプトを実行する場合</h2><p>万が一途中で失敗してもう一度スクリプトを動作させる場合、次のことに注意してください。</p><ul><li>RedisやPostgresのインストールが終わっている場合、「install locally」はNoにしてください。<br> host・port設定はそのままEnterを押します。 ユーザー名やパスワードは、前回実行した際に指定したものを入力します。</li></ul><h2 id="envファイルについて" tabindex="-1"><a class="header-anchor" href="#envファイルについて" aria-hidden="true">#</a> .envファイルについて</h2><p>インストールスクリプトは、2つの.envファイルを作成します。<br> アップデートの際に使用します。</p><h3 id="root-misskey-env" tabindex="-1"><a class="header-anchor" href="#root-misskey-env" aria-hidden="true">#</a> /root/.misskey.env</h3><p>misskeyを実行するユーザーを覚えておくために必要です。</p><h3 id="home-misskeyユーザー-misskey-env" tabindex="-1"><a class="header-anchor" href="#home-misskeyユーザー-misskey-env" aria-hidden="true">#</a> /home/(misskeyユーザー)/.misskey.env</h3><p>systemdの場合に生成されます。<br> 主にディレクトリを覚えておくのに使用します。</p><h3 id="home-misskeyユーザー-misskey-docker-env" tabindex="-1"><a class="header-anchor" href="#home-misskeyユーザー-misskey-docker-env" aria-hidden="true">#</a> /home/(misskeyユーザー)/.misskey-docker.env</h3><p>Dockerの場合に生成されます。<br> 実行されているコンテナとイメージの番号を保存しています。<br> コンテナの番号はアップデートの際に更新されます。古いイメージは削除されます。</p><h2 id="自分で管理する" tabindex="-1"><a class="header-anchor" href="#自分で管理する" aria-hidden="true">#</a> 自分で管理する</h2><p>インストール後、構成を変更する際に役立つかもしれないメモです。</p><p>&quot;example.com&quot;を自分のドメインに置き換えて読んでください。</p><h3 id="misskeyディレクトリ" tabindex="-1"><a class="header-anchor" href="#misskeyディレクトリ" aria-hidden="true">#</a> Misskeyディレクトリ</h3><p>Misskeyのソースは<code>/home/ユーザー/ディレクトリ</code>としてcloneされます。<br> （ユーザー、ディレクトリの初期値はともにmisskeyです。）</p><p>Misskeyディレクトリへは、以下のように移動するとよいでしょう。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo -iu ユーザー\ncd ディレクトリ\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>もとのユーザーに戻るにはexitを実行します。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>exit\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="systemd" tabindex="-1"><a class="header-anchor" href="#systemd" aria-hidden="true">#</a> systemd</h3><p>systemdのプロセス名はexample.comです。<br> たとえば再起動するには次のようにします。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo systemctl restart example.com\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>journalctlでログを確認できます。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>journalctl -t example.com\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>設定ファイルは<code>/etc/systemd/system/example.com.service</code>として保存されています。</p><h3 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h3><p>DockerはMisskeyユーザーでrootless実行されています。</p><p>sudo でMisskeyユーザーに入るときは、<code>XDG_RUNTIME_DIR</code>と<code>DOCKER_HOST</code>を変更する必要があります。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo -iu ユーザー\nexport XDG_RUNTIME_DIR=/run/user/$UID\nexport DOCKER_HOST=unix://$XDG_RUNTIME_DIR/docker.sock\n\n# プロセス一覧を表示\ndocker ps\n\n# ログを表示\ndocker logs --tail 50 -f コンテナID\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>ワンライナーなら次のようにします。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo -u ユーザー XDG_RUNTIME_DIR=/run/user/$(id -u ユーザー) DOCKER_HOST=unix:///run/user/$(id -u ユーザー)/docker.sock docker ps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> nginx</h3><p>nginxの設定は<code>/etc/nginx/conf.d/example.com.conf</code>として保存されています。</p><h3 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> Redis</h3><p>requirepassとbindを<code>/etc/redis/misskey.conf</code>で設定しています。</p><h2 id="q-アップデート後に502でアクセスできない" tabindex="-1"><a class="header-anchor" href="#q-アップデート後に502でアクセスできない" aria-hidden="true">#</a> Q. アップデート後に502でアクセスできない</h2><p>Dockerでは、起動後にマイグレーションをするため、すぐにアクセスできません。<br> マイグレーションが終わっているかどうか確認してみてください。</p><p>それでもアップデート後にアクセスできない、ということが稀にあります。</p><p>もしくは、yarn installに失敗しているというものです。</p><p>Misskeyディレクトリで次の内容を実行し、もう一度アップデートを実行してみてください。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm run cleanall\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>journalctlでログを確認すると、たいていre2が云々という記述が見当たります。</p><h2 id="q-同じサーバーにもう1つmisskeyを建てたい" tabindex="-1"><a class="header-anchor" href="#q-同じサーバーにもう1つmisskeyを建てたい" aria-hidden="true">#</a> Q. 同じサーバーにもう1つMisskeyを建てたい</h2><p>スクリプトは同じサーバーに追加でMisskeyをインストールすることは想定していません。<br> 幾つかの設定が上書きされるか、途中でエラーになってしまうでしょう。</p>',47),g={},x=(0,a(3744).Z)(g,[["render",function(e,s){const a=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[i,(0,l._)("p",null,[r,n,d,t,(0,l._)("a",c,[o,(0,l.Wm)(a)])]),h,(0,l._)("p",null,[u,(0,l._)("a",p,[m,(0,l.Wm)(a)]),b]),k],64)}]])},3744:(e,s)=>{s.Z=(e,s)=>{for(const[a,l]of s)e[a]=l;return e}},419:(e,s,a)=>{a.r(s),a.d(s,{data:()=>l});const l={key:"v-5b4d1b14",path:"/docs/install/bash.html",title:"Misskey install shell script v1.4.0",lang:"ja-JP",frontmatter:{},excerpt:"",headers:[{level:2,title:"ライセンス",slug:"ライセンス",children:[]},{level:2,title:"準備するもの",slug:"準備するもの",children:[]},{level:2,title:"Cloudflareの設定",slug:"cloudflareの設定",children:[]},{level:2,title:"操作",slug:"操作",children:[{level:3,title:"1. SSH",slug:"_1-ssh",children:[]},{level:3,title:"2. 環境を最新にする",slug:"_2-環境を最新にする",children:[]},{level:3,title:"3. インストールをはじめる",slug:"_3-インストールをはじめる",children:[]},{level:3,title:"4. アップデートする",slug:"_4-アップデートする",children:[]}]},{level:2,title:"動作を確認した環境",slug:"動作を確認した環境",children:[{level:3,title:"Oracle Cloud Infrastructure",slug:"oracle-cloud-infrastructure",children:[]}]},{level:2,title:"Issues & PRs Welcome",slug:"issues-prs-welcome",children:[]},{level:2,title:"Systemd or Docker?",slug:"systemd-or-docker",children:[]},{level:2,title:"nginxを使うかどうか",slug:"nginxを使うかどうか",children:[]},{level:2,title:"Add more swaps!",slug:"add-more-swaps",children:[]},{level:2,title:"途中で失敗してまたスクリプトを実行する場合",slug:"途中で失敗してまたスクリプトを実行する場合",children:[]},{level:2,title:".envファイルについて",slug:"envファイルについて",children:[{level:3,title:"/root/.misskey.env",slug:"root-misskey-env",children:[]},{level:3,title:"/home/(misskeyユーザー)/.misskey.env",slug:"home-misskeyユーザー-misskey-env",children:[]},{level:3,title:"/home/(misskeyユーザー)/.misskey-docker.env",slug:"home-misskeyユーザー-misskey-docker-env",children:[]}]},{level:2,title:"自分で管理する",slug:"自分で管理する",children:[{level:3,title:"Misskeyディレクトリ",slug:"misskeyディレクトリ",children:[]},{level:3,title:"systemd",slug:"systemd",children:[]},{level:3,title:"Docker",slug:"docker",children:[]},{level:3,title:"nginx",slug:"nginx",children:[]},{level:3,title:"Redis",slug:"redis",children:[]}]},{level:2,title:"Q. アップデート後に502でアクセスできない",slug:"q-アップデート後に502でアクセスできない",children:[]},{level:2,title:"Q. 同じサーバーにもう1つMisskeyを建てたい",slug:"q-同じサーバーにもう1つmisskeyを建てたい",children:[]}],filePathRelative:"docs/install/bash.md",git:{updatedTime:1639513848e3,contributors:[{name:"syuilo",email:"Syuilotan@yahoo.co.jp",commits:1},{name:"tamaina",email:"tamaina@hotmail.co.jp",commits:1}]},relatedPages:[{title:"Misskeyインスタンスの作成",path:"/docs/install.html",summary:"Misskeyインスタンスの作成方法についての案内です。"}]}}}]);