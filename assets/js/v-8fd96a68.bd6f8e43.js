"use strict";(self.webpackChunkmisskey_hub=self.webpackChunkmisskey_hub||[]).push([[5890],{1226:(e,a,t)=>{t.r(a),t.d(a,{default:()=>b});const r=(0,t(6252).uE)('<h1 id="pages" tabindex="-1"><a class="header-anchor" href="#pages" aria-hidden="true">#</a> Pages</h1><h2 id="変数" tabindex="-1"><a class="header-anchor" href="#変数" aria-hidden="true">#</a> 変数</h2><p>変数を使うことで動的なページを作成できます。テキスト内で <b>{ 変数名 }</b> と書くとそこに変数の値を埋め込めます。例えば <b>Hello { thing } world!</b> というテキストで、変数(thing)の値が <b>ai</b> だった場合、テキストは <b>Hello ai world!</b> になります。</p><p>変数の評価(値を算出すること)は上から下に行われるので、ある変数の中で自分より下の変数を参照することはできません。例えば上から <b>A、B、C</b> と3つの変数を定義したとき、<b>C</b>の中で<b>A</b>や<b>B</b>を参照することはできますが、<b>A</b>の中で<b>B</b>や<b>C</b>を参照することはできません。</p><p>ユーザーからの入力を受け取るには、ページに「ユーザー入力」ブロックを設置し、「変数名」に入力を格納したい変数名を設定します(変数は自動で作成されます)。その変数を使ってユーザー入力に応じた動作を行えます。</p><p>関数を使うと、値の算出処理を再利用可能な形にまとめることができます。関数を作るには、「関数」タイプの変数を作成します。関数にはスロット(引数)を設定することができ、スロットの値は関数内で変数として利用可能です。また、関数を引数に取る関数(高階関数と呼ばれます)も存在します。関数は予め定義しておくほかに、このような高階関数のスロットに即席でセットすることもできます。</p>',6),s={},b=(0,t(3744).Z)(s,[["render",function(e,a){return r}]])},3744:(e,a)=>{a.Z=(e,a)=>{for(const[t,r]of a)e[t]=r;return e}},4889:(e,a,t)=>{t.r(a),t.d(a,{data:()=>r});const r={key:"v-8fd96a68",path:"/docs/features/pages.html",title:"Pages",lang:"ja-JP",frontmatter:{},excerpt:"",headers:[{level:2,title:"変数",slug:"変数",children:[]}],filePathRelative:"docs/features/pages.md",git:{updatedTime:1631291596e3,contributors:[{name:"syuilo",email:"Syuilotan@yahoo.co.jp",commits:1}]}}}}]);