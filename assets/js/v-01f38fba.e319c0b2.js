"use strict";(self.webpackChunkmisskey_hub=self.webpackChunkmisskey_hub||[]).push([[5807],{3114:(n,e,a)=>{a.r(e),a.d(e,{default:()=>$n});var s=a(6252);const l=(0,s._)("h1",{id:"マニュアルインストール時のトラブルシューティング",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#マニュアルインストール時のトラブルシューティング","aria-hidden":"true"},"#"),(0,s.Uk)(" マニュアルインストール時のトラブルシューティング")],-1),t=(0,s._)("p",null,[(0,s._)("small",null,"2018年10月07日 / 2021年12月20日 最終更新 / 文責 aqz/tamaina")],-1),r=(0,s._)("p",null,[(0,s.Uk)("MisskeyInstallBattle参加者が増えましたが、それに伴い時期を追うごとに重軽傷者が増加しています。"),(0,s._)("br"),(0,s.Uk)(" この記事ではそのような負傷者を減らすため、過去に事故が起きてしまった個所の傾向と対策をわかりやすく解説します。")],-1),p=(0,s.Uk)("まず最初に、"),i=(0,s.Uk)("構築の手引き"),o=(0,s.Uk)("を熟読してください。"),c=(0,s.Uk)("また、拙著の"),m={href:"https://hide.ac/articles/iFwm5HDvH",target:"_blank",rel:"noopener noreferrer"},u=(0,s.Uk)("Ubuntu向けsystemd版解説"),d=(0,s.Uk)("、"),h={href:"https://hide.ac/articles/csERs-7SU",target:"_blank",rel:"noopener noreferrer"},k=(0,s.Uk)("Oracle Cloud版詳細解説"),b=(0,s.Uk)("も参考までにお読みいただけると幸いです。"),g=(0,s._)("h1",{id:"ubuntu向けシェルスクリプトのお知らせ",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#ubuntu向けシェルスクリプトのお知らせ","aria-hidden":"true"},"#"),(0,s.Uk)(" Ubuntu向けシェルスクリプトのお知らせ")],-1),y=(0,s._)("p",null,"Ubuntu向け解説はコピペばかりでつまらない！時間がかかる！とにかく面倒！",-1),_=(0,s._)("p",null,"……あれ、コピペだけでできるなら、つまり完全自動化できるのでは？",-1),f=(0,s.Uk)("というわけで、"),U=(0,s._)("strong",null,"シェルスクリプトでほぼ全部やってくれるやつを作ってみました！",-1),x=(0,s._)("br",null,null,-1),v={href:"https://github.com/joinmisskey/bash-install#readme",target:"_blank",rel:"noopener noreferrer"},L=(0,s._)("strong",null,"詳細と使用方法はこちらから！",-1),w=(0,s.Uk)(" https://github.com/joinmisskey/bash-install#readme"),M=(0,s._)("p",null,"ドメインの購入とCloudflareのセットアップ、サーバーの確保についてはご自身でご準備ください。",-1),S=(0,s.Uk)("シェルスクリプトに不具合があれば"),W={href:"https://p1.a9z.dev/@aqz",target:"_blank",rel:"noopener noreferrer"},T=(0,s.Uk)("製作者(aqz)"),A=(0,s.Uk)("にお知らせいただければと思います。"),E=(0,s._)("h1",{id:"インストールとビルド",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#インストールとビルド","aria-hidden":"true"},"#"),(0,s.Uk)(" インストールとビルド")],-1),P=(0,s.Uk)("構築の手引き"),R=(0,s.Uk)("をよく読みましょう。"),C=(0,s.uE)('<h2 id="imagemagick関連" tabindex="-1"><a class="header-anchor" href="#imagemagick関連" aria-hidden="true">#</a> ImageMagick関連</h2><p><em><strong>ImageMagickは不要です！</strong></em></p><h2 id="ビルドが失敗する" tabindex="-1"><a class="header-anchor" href="#ビルドが失敗する" aria-hidden="true">#</a> ビルドが失敗する</h2><p>Misskeyのビルドには、経験則上、最低でも2GBのメモリが必要となっています。<br> サーバーをスケールアップする手もありますが、お使いのPCでビルドしてサーバーにデプロイするという手もあります。</p><h2 id="なんだかうまくいかない" tabindex="-1"><a class="header-anchor" href="#なんだかうまくいかない" aria-hidden="true">#</a> なんだかうまくいかない</h2>',5),Y=(0,s.Uk)("構築の手引き"),j=(0,s.Uk)("をよく読みましょう。"),B=(0,s._)("li",null,[(0,s.Uk)("node.jsのバージョンが古いかも？ "),(0,s._)("ul",null,[(0,s._)("li",null,"新しめのバージョンにしましょう。")])],-1),D=(0,s._)("li",null,[(0,s.Uk)("インストールやビルドの際にErrorとかWARNとかが出てくることがありますが、問題ない場合もあります。とりあえず"),(0,s._)("code",null,"npm start"),(0,s.Uk)("して動作確認しちゃいましょう。")],-1),N=(0,s.Uk)("node-gypがインストールされていないかも？ "),z=(0,s._)("li",null,[(0,s._)("code",null,"apt install build-essential"),(0,s.Uk)("を試す。")],-1),q=(0,s.Uk)("Windowsは"),F={href:"https://qiita.com/AkihiroTakamura/items/25ba516f8ec624e66ee7",target:"_blank",rel:"noopener noreferrer"},I=(0,s.Uk)("この記事"),O=(0,s.Uk)("も参考にしてみる。"),H=(0,s.Uk)("これでもだめそうだったら、最初から"),G=(0,s.Uk)("構築の手引き"),J=(0,s.Uk)("の手順に従ってやり直してみてください。"),Q=(0,s._)("h2",{id:"バージョンアップ後に不具合が発生した",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#バージョンアップ後に不具合が発生した","aria-hidden":"true"},"#"),(0,s.Uk)(" バージョンアップ後に不具合が発生した")],-1),Z=(0,s.Uk)("構築の手引き"),V=(0,s.Uk)("をよく読みましょう。"),K=(0,s._)("li",null,[(0,s.Uk)("Misskeyのバージョンアップ時にはしっかり"),(0,s._)("code",null,"yarn install"),(0,s.Uk)("や"),(0,s._)("code",null,"npm run migrate"),(0,s.Uk)("してください。それでも直らない場合、"),(0,s._)("code",null,"npm run clean-all && yarn install"),(0,s.Uk)("を試し、"),(0,s._)("code",null,"npm run build && npm run migrate && npm start"),(0,s.Uk)("してみてください。")],-1),X=(0,s.Uk)("これでもだめそうだったら、最初から"),$=(0,s.Uk)("構築の手引き"),nn=(0,s.Uk)("の手順に従ってやり直してみてください。"),en=(0,s._)("hr",null,null,-1),an=(0,s._)("h1",{id:"設定",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#設定","aria-hidden":"true"},"#"),(0,s.Uk)(" 設定")],-1),sn=(0,s.Uk)("構築の手引き"),ln=(0,s.Uk)("をよく読みましょう。"),tn=(0,s._)("code",null,".config/default.yml",-1),rn=(0,s.Uk)("で設定を行います。 "),pn={href:"https://github.com/misskey-dev/misskey/blob/develop/.config/example.yml",target:"_blank",rel:"noopener noreferrer"},on=(0,s._)("code",null,".config/example.yml",-1),cn=(0,s.Uk)("をコピーし、コメントに従って記述します。"),mn=(0,s._)("p",null,[(0,s.Uk)("（YAML形式では、"),(0,s._)("code",null,"#"),(0,s.Uk)("から行末まではコメントとして扱われます。）")],-1),un=(0,s._)("h2",{id:"urlとポート番号",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#urlとポート番号","aria-hidden":"true"},"#"),(0,s.Uk)(" URLとポート番号")],-1),dn=(0,s._)("p",null,"URLとポート番号のしくみは、少し分かりにくいと思います。",-1),hn=(0,s._)("h3",{id:"url-ポートとtls証明書の設定-port-and-tls-settings-part-a-example-ymlの解説",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#url-ポートとtls証明書の設定-port-and-tls-settings-part-a-example-ymlの解説","aria-hidden":"true"},"#"),(0,s.Uk)(" URL, ポートとTLS証明書の設定（Port and TLS settings）part A: example.ymlの解説")],-1),kn=(0,s.Uk)("リビジョン番号"),bn={href:"https://github.com/misskey-dev/misskey/blob/85a0f696bcea779b02749dae596fff94a1df2467/.config/example.yml",target:"_blank",rel:"noopener noreferrer"},gn=(0,s.Uk)("85a0f69"),yn=(0,s.Uk)("時点での"),_n={href:"https://github.com/misskey-dev/misskey/blob/develop/.config/example.yml",target:"_blank",rel:"noopener noreferrer"},fn=(0,s.Uk)(".config/example.yml"),Un=(0,s.Uk)("に、「Port and TLS settings」として説明図付きで順に書かれていますので、それに沿って設定をしていきましょう。 本文の解説を日本語訳しながらやっていきます。"),xn=(0,s.uE)('<h4 id="urlの設定" tabindex="-1"><a class="header-anchor" href="#urlの設定" aria-hidden="true">#</a> URLの設定</h4><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment"># Final accessible URL seen by a user.</span>\n<span class="token comment"># 最終的にユーザーがアクセスするURL</span>\n<span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.tld/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong><code>url: </code>には、インスタンスにブラウザでアクセスしたときアドレスバーに表示される</strong>(したい)<strong>URLを書きます。</strong></p><h4 id="ポートと証明書の設定" tabindex="-1"><a class="header-anchor" href="#ポートと証明書の設定" aria-hidden="true">#</a> ポートと証明書の設定</h4><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>\n<span class="token comment">#   ┌───────────────────────┐</span>\n<span class="token comment">#───┘ Port and TLS settings └───────────────────────────────────</span>\n<span class="token comment">#### ポートと証明書の設定      ####################################</span>\n<span class="token comment">#</span>\n<span class="token comment"># Misskey supports two deployment options for public.</span>\n<span class="token comment"># Misskeyは2つのインスタンス開設方法をサポートしています。</span>\n<span class="token comment">#</span>\n\n<span class="token comment"># Option 1: With Reverse Proxy</span>\n<span class="token comment"># 方法その1 リバースプロキシを挟む</span>\n<span class="token comment">#</span>\n<span class="token comment">#                 +----- https://example.tld/ ------------+</span>\n<span class="token comment">#   +------+      |+-------------+      +----------------+|</span>\n<span class="token comment">#   | User | ---&gt; || Proxy (443) | ---&gt; | Misskey (3000) ||</span>\n<span class="token comment">#   +------+      |+-------------+      +----------------+|</span>\n<span class="token comment">#                 +---------------------------------------+</span>\n<span class="token comment">#</span>\n<span class="token comment">#   You need to setup reverse proxy. (eg. Nginx)</span>\n<span class="token comment">#   この方法では、リバースプロキシ（例: Nginx）をセットアップする必要があります。</span>\n<span class="token comment">#   You do not define &#39;https&#39; section.</span>\n<span class="token comment">#   &#39;https&#39;セクション（後述）は設定せず、コメントアウトしたままにします。</span>\n\n<span class="token comment"># Option 2: Standalone</span>\n<span class="token comment"># 方法その2 スタンドアロン</span>\n<span class="token comment">#           (リバースプロキシを挟まず、nodeのプロセスで直接ユーザーからのアクセスを受ける)</span>\n<span class="token comment">#</span>\n<span class="token comment">#                 +- https://example.tld/ -+</span>\n<span class="token comment">#   +------+      |   +---------------+    |</span>\n<span class="token comment">#   | User | ---&gt; |   | Misskey (443) |    |</span>\n<span class="token comment">#   +------+      |   +---------------+    |</span>\n<span class="token comment">#                 +------------------------+</span>\n<span class="token comment">#</span>\n<span class="token comment">#   You need to run Misskey as root.</span>\n<span class="token comment">#   この方法では、Misskeyをルート(の権限をもたせた状態)で実行する必要があります。</span>\n<span class="token comment">#   You need to set Certificate in &#39;https&#39; section.</span>\n<span class="token comment">#   &#39;https&#39;セクション(後述)で証明書の設定を行う必要があります。</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h5 id="方法1-リバースプロキシを挟むとき" tabindex="-1"><a class="header-anchor" href="#方法1-リバースプロキシを挟むとき" aria-hidden="true">#</a> 方法1 リバースプロキシを挟むとき</h5><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment"># To use option 1, uncomment below line.</span>\n<span class="token comment"># オプション1で設定する場合、以下の行をコメントアウトします　→ しました</span>\n<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3000</span>    <span class="token comment"># A port that your Misskey server should listen.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>以上の3行は、リバースプロキシを挟むときの話です。 この例では、Misskeyはポート3000で通信します。 リバースプロキシでは、ローカル側の宛先にこのポート番号を指定します。</p><h5 id="方法2-リバースプロキシを挟まないとき" tabindex="-1"><a class="header-anchor" href="#方法2-リバースプロキシを挟まないとき" aria-hidden="true">#</a> 方法2 リバースプロキシを挟まないとき</h5><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment"># To use option 2, uncomment below lines.</span>\n<span class="token comment"># オプション2で設定する場合は、以下の6行をコメントアウトします　→ しました</span>\n<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>\n\n<span class="token key atrule">https</span><span class="token punctuation">:</span>\n  <span class="token comment"># path for certification</span>\n  <span class="token key atrule">key</span><span class="token punctuation">:</span> /etc/letsencrypt/live/example.tld/privkey.pem\n  <span class="token key atrule">cert</span><span class="token punctuation">:</span> /etc/letsencrypt/live/example.tld/fullchain.pem\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>以上の8行は、リバースプロキシを挟まないときの話です。 ポート443(https)で直接ユーザーと通信します（ポート443を利用するのでMisskeyのプロセスにはルート権限が必要です）。</p><p>TLS証明書を別途取得し、取得した証明書のディレクトリを<code>https:</code>で設定します。 ここ書かれているのは、Let&#39;s Encryptで<code>example.tld</code>に対する証明書を発行したときの例です。</p><hr><h3 id="url-ポートとtls証明書の設定-port-and-tls-settings-part-b-全体像" tabindex="-1"><a class="header-anchor" href="#url-ポートとtls証明書の設定-port-and-tls-settings-part-b-全体像" aria-hidden="true">#</a> URL, ポートとTLS証明書の設定（Port and TLS settings）part B: 全体像</h3><p>example.ymlの解説文を省くと、default.ymlにおけるポートとTLS証明書の設定は以下のようになります。</p><h4 id="方法1-リバースプロキシを挟むとき-1" tabindex="-1"><a class="header-anchor" href="#方法1-リバースプロキシを挟むとき-1" aria-hidden="true">#</a> 方法1 リバースプロキシを挟むとき</h4><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.tld/\n<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3000</span>\n<span class="token comment"># https:</span>\n<span class="token comment">#   # path for certification</span>\n<span class="token comment">#   key: /etc/letsencrypt/live/example.tld/privkey.pem</span>\n<span class="token comment">#   cert: /etc/letsencrypt/live/example.tld/fullchain.pem</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="方法2-リバースプロキシを挟まず直接通信するとき" tabindex="-1"><a class="header-anchor" href="#方法2-リバースプロキシを挟まず直接通信するとき" aria-hidden="true">#</a> 方法2 リバースプロキシを挟まず直接通信するとき</h4><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.tld/\n<span class="token comment"># port: 3000</span>\n<span class="token key atrule">https</span><span class="token punctuation">:</span>\n  <span class="token comment"># path for certification</span>\n  <span class="token key atrule">key</span><span class="token punctuation">:</span> /etc/letsencrypt/live/example.tld/privkey.pem\n  <span class="token key atrule">cert</span><span class="token punctuation">:</span> /etc/letsencrypt/live/example.tld/fullchain.pem\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><hr><h1 id="npm-startやアクセス時によく遭遇するエラー" tabindex="-1"><a class="header-anchor" href="#npm-startやアクセス時によく遭遇するエラー" aria-hidden="true">#</a> <code>npm start</code>やアクセス時によく遭遇するエラー</h1><p><code>npm start</code>でサーバーを立てられたものの、その後不具合に遭遇してしまう場合もあります。</p>',22),vn=(0,s.Uk)("まず、"),Ln=(0,s.Uk)("構築の手引き"),wn=(0,s.Uk)("をよく読みましょう。"),Mn=(0,s.uE)('<h2 id="yamlのエラーが出る" tabindex="-1"><a class="header-anchor" href="#yamlのエラーが出る" aria-hidden="true">#</a> YAMLのエラーが出る</h2><p><code>default.yml</code>の構文にミスがある可能性があります。 行頭に余分なスペースはありませんか？</p><h2 id="redisに接続できない" tabindex="-1"><a class="header-anchor" href="#redisに接続できない" aria-hidden="true">#</a> redisに接続できない</h2><p>redis-serverは起動していますか？ 何らかの接続数の上限に達していませんか？</p><p>11.20.2より前のバージョンのMisskeyはredisのパスワードを解くことができません。以下の2点を確認してください。</p><ul><li>redisにパスワードを設定しない。</li><li><code>default.yml</code>の<code>redis:</code>の<code>pass:</code>の行をコメントアウトする。</li></ul><h2 id="上部に「開発ビルドです」と書かれた赤いバーが表示される" tabindex="-1"><a class="header-anchor" href="#上部に「開発ビルドです」と書かれた赤いバーが表示される" aria-hidden="true">#</a> 上部に「開発ビルドです」と書かれた赤いバーが表示される</h2><p>インスタンスを公開する場合は必ずproductionビルドを使いましょう。</p><p>製品ビルドにするには、環境変数が<code>NODE_ENV=production</code>になるように設定し<code>npm run build &amp;&amp; npm start</code>します。</p><h2 id="新規登録できない" tabindex="-1"><a class="header-anchor" href="#新規登録できない" aria-hidden="true">#</a> 新規登録できない</h2><p>APIに接続できないようです。 <code>default.yml</code>の冒頭の<code>url:</code>が正しく設定されているか確認しましょう。 Node.jsのバージョンや、インストールの設定ももう一度よく確認しましょう。</p><p>また、正しく<code>default.yml</code>が書かれていますか？</p><h2 id="タイムラインの表示に問題が発生する、リアルタイムでtlが更新されない" tabindex="-1"><a class="header-anchor" href="#タイムラインの表示に問題が発生する、リアルタイムでtlが更新されない" aria-hidden="true">#</a> タイムラインの表示に問題が発生する、リアルタイムでTLが更新されない</h2><p>タイムラインの読み込みに失敗する場合、mongoDBやPostgreSQLのバージョンが古い可能性があります。 PostgreSQLはなるべくv13にしてください。</p><p>redisの接続も確認した方がよいでしょう。 <a href="#redis%E3%81%AB%E6%8E%A5%E7%B6%9A%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%EF%BC%9F">→ redisに接続できない？ を参照</a></p><h2 id="永遠に「再接続中」と右下に表示される、リアルタイムでtlが更新されない" tabindex="-1"><a class="header-anchor" href="#永遠に「再接続中」と右下に表示される、リアルタイムでtlが更新されない" aria-hidden="true">#</a> 永遠に「再接続中」と右下に表示される、リアルタイムでTLが更新されない</h2><p>プロキシを利用している場合、それがWebSocket通信を阻害している可能性が考えられます。</p><h2 id="オブジェクトストレージ使用時、不具合が出る" tabindex="-1"><a class="header-anchor" href="#オブジェクトストレージ使用時、不具合が出る" aria-hidden="true">#</a> オブジェクトストレージ使用時、不具合が出る</h2><p>オブジェクトストレージの権限の設定が厳しくなっている可能性があります。「ファイル（オブジェクト）が誰でも取得可能」なように権限を設定してみてください。 また、<code>default.yml</code>をもう一度確認してみてください。</p><h3 id="s3-example-with-cdn-custom-domain" tabindex="-1"><a class="header-anchor" href="#s3-example-with-cdn-custom-domain" aria-hidden="true">#</a> S3 example (with CDN, custom domain)</h3><p>S3 example (with CDN, custom domain)は、AWSのデフォルトのドメインではなく独自ドメインでストレージを公開したい場合の設定です。 endpointと公開ドメインが同じサービスの場合はS3 exampleのように<code>baseUrl</code>は明記しなくてよく、さらにregionの概念がないサービスの場合はregionの行は必要ありません。</p><h3 id="s3互換サービスでの設定" tabindex="-1"><a class="header-anchor" href="#s3互換サービスでの設定" aria-hidden="true">#</a> S3互換サービスでの設定</h3>',22),Sn=(0,s.Uk)("Misskeyではオブジェクトストレージの接続に"),Wn={href:"https://www.npmjs.com/package/aws-sdk",target:"_blank",rel:"noopener noreferrer"},Tn=(0,s.Uk)("aws-sdk"),An=(0,s.Uk)("を利用しています。 Amazon S3に互換性のあるオブジェクトストレージであれば利用できる可能性があります。"),En=(0,s._)("p",null,"各サービス/ソフトウェアのドキュメントをよく読み、設定してみてください。",-1),Pn=(0,s._)("hr",null,null,-1),Rn=(0,s._)("h1",{id:"まったく解決しなかった場合",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#まったく解決しなかった場合","aria-hidden":"true"},"#"),(0,s.Uk)(" まったく解決しなかった場合")],-1),Cn=(0,s._)("p",null,"以下の順序を試してみてください。",-1),Yn=(0,s._)("li",null,"Misskeyのドキュメントをよく読む。",-1),jn=(0,s._)("li",null,"Googleで検索してみる。",-1),Bn={href:"https://github.com/misskey-dev/misskey/issues",target:"_blank",rel:"noopener noreferrer"},Dn=(0,s.Uk)("MisskeyリポジトリのIssues"),Nn=(0,s.Uk)("を検索してみる（同じエラーに遭遇している場合や、Misskeyのバグの可能性もあります）。"),zn={href:"https://forum.misskey.io/",target:"_blank",rel:"noopener noreferrer"},qn=(0,s.Uk)("Misskey Forum"),Fn=(0,s.Uk)("を検索してみる。"),In=(0,s.Uk)("検索してどうしても見つからなかったら、専門家に質問してみてください。 "),On=(0,s.Uk)("Forumや"),Hn={href:"https://discord.gg/P4yYqYBjEp",target:"_blank",rel:"noopener noreferrer"},Gn=(0,s.Uk)("MisskeyのDiscordサーバー"),Jn=(0,s.Uk)("もしくは"),Qn={href:"https://discord.gg/mJJGAHv",target:"_blank",rel:"noopener noreferrer"},Zn=(0,s.Uk)("「鯖缶工場」"),Vn=(0,s.Uk)("で聞いてみる"),Kn=(0,s._)("li",null,"開発者（[aqz]](https://p1.a9z.dev/@aqz)やしゅいろ）にリプライやダイレクト投稿を送信して聞いてみる",-1),Xn={},$n=(0,a(3744).Z)(Xn,[["render",function(n,e){const a=(0,s.up)("RouterLink"),Xn=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[l,t,r,(0,s._)("p",null,[(0,s._)("strong",null,[p,(0,s.Wm)(a,{to:"/docs/install/manual.html"},{default:(0,s.w5)((()=>[i])),_:1}),o])]),(0,s._)("p",null,[c,(0,s._)("a",m,[u,(0,s.Wm)(Xn)]),d,(0,s._)("a",h,[k,(0,s.Wm)(Xn)]),b]),g,y,_,(0,s._)("p",null,[f,U,x,(0,s._)("a",v,[L,w,(0,s.Wm)(Xn)])]),M,(0,s._)("p",null,[S,(0,s._)("a",W,[T,(0,s.Wm)(Xn)]),A]),E,(0,s._)("p",null,[(0,s.Wm)(a,{to:"/docs/install/manual.html"},{default:(0,s.w5)((()=>[P])),_:1}),R]),C,(0,s._)("ul",null,[(0,s._)("li",null,[(0,s.Wm)(a,{to:"/docs/install/manual.html"},{default:(0,s.w5)((()=>[Y])),_:1}),j]),B,D,(0,s._)("li",null,[N,(0,s._)("ul",null,[z,(0,s._)("li",null,[q,(0,s._)("a",F,[I,(0,s.Wm)(Xn)]),O])])]),(0,s._)("li",null,[H,(0,s.Wm)(a,{to:"/docs/install/manual.html"},{default:(0,s.w5)((()=>[G])),_:1}),J])]),Q,(0,s._)("ul",null,[(0,s._)("li",null,[(0,s.Wm)(a,{to:"/docs/install/manual.html"},{default:(0,s.w5)((()=>[Z])),_:1}),V]),K,(0,s._)("li",null,[X,(0,s.Wm)(a,{to:"/docs/install/manual.html"},{default:(0,s.w5)((()=>[$])),_:1}),nn])]),en,an,(0,s._)("p",null,[(0,s.Wm)(a,{to:"/docs/install/manual.html"},{default:(0,s.w5)((()=>[sn])),_:1}),ln]),(0,s._)("p",null,[tn,rn,(0,s._)("a",pn,[on,(0,s.Wm)(Xn)]),cn]),mn,un,dn,hn,(0,s._)("p",null,[kn,(0,s._)("a",bn,[gn,(0,s.Wm)(Xn)]),yn,(0,s._)("a",_n,[fn,(0,s.Wm)(Xn)]),Un]),xn,(0,s._)("p",null,[vn,(0,s.Wm)(a,{to:"/docs/install/manual.html"},{default:(0,s.w5)((()=>[Ln])),_:1}),wn]),Mn,(0,s._)("p",null,[Sn,(0,s._)("a",Wn,[Tn,(0,s.Wm)(Xn)]),An]),En,Pn,Rn,Cn,(0,s._)("ol",null,[Yn,jn,(0,s._)("li",null,[(0,s._)("a",Bn,[Dn,(0,s.Wm)(Xn)]),Nn]),(0,s._)("li",null,[(0,s._)("a",zn,[qn,(0,s.Wm)(Xn)]),Fn]),(0,s._)("li",null,[In,(0,s._)("ol",null,[(0,s._)("li",null,[On,(0,s._)("a",Hn,[Gn,(0,s.Wm)(Xn)]),Jn,(0,s._)("a",Qn,[Zn,(0,s.Wm)(Xn)]),Vn]),Kn])])])],64)}]])},3744:(n,e)=>{e.Z=(n,e)=>{for(const[a,s]of e)n[a]=s;return n}},6310:(n,e,a)=>{a.r(e),a.d(e,{data:()=>s});const s={key:"v-01f38fba",path:"/docs/admin/troubleshooting.html",title:"マニュアルインストール時のトラブルシューティング",lang:"ja-JP",frontmatter:{},excerpt:"",headers:[{level:2,title:"ImageMagick関連",slug:"imagemagick関連",children:[]},{level:2,title:"ビルドが失敗する",slug:"ビルドが失敗する",children:[]},{level:2,title:"なんだかうまくいかない",slug:"なんだかうまくいかない",children:[]},{level:2,title:"バージョンアップ後に不具合が発生した",slug:"バージョンアップ後に不具合が発生した",children:[]},{level:2,title:"URLとポート番号",slug:"urlとポート番号",children:[{level:3,title:"URL, ポートとTLS証明書の設定（Port and TLS settings）part A: example.ymlの解説",slug:"url-ポートとtls証明書の設定-port-and-tls-settings-part-a-example-ymlの解説",children:[]},{level:3,title:"URL, ポートとTLS証明書の設定（Port and TLS settings）part B: 全体像",slug:"url-ポートとtls証明書の設定-port-and-tls-settings-part-b-全体像",children:[]}]},{level:2,title:"YAMLのエラーが出る",slug:"yamlのエラーが出る",children:[]},{level:2,title:"redisに接続できない",slug:"redisに接続できない",children:[]},{level:2,title:"上部に「開発ビルドです」と書かれた赤いバーが表示される",slug:"上部に「開発ビルドです」と書かれた赤いバーが表示される",children:[]},{level:2,title:"新規登録できない",slug:"新規登録できない",children:[]},{level:2,title:"タイムラインの表示に問題が発生する、リアルタイムでTLが更新されない",slug:"タイムラインの表示に問題が発生する、リアルタイムでtlが更新されない",children:[]},{level:2,title:"永遠に「再接続中」と右下に表示される、リアルタイムでTLが更新されない",slug:"永遠に「再接続中」と右下に表示される、リアルタイムでtlが更新されない",children:[]},{level:2,title:"オブジェクトストレージ使用時、不具合が出る",slug:"オブジェクトストレージ使用時、不具合が出る",children:[{level:3,title:"S3 example (with CDN, custom domain)",slug:"s3-example-with-cdn-custom-domain",children:[]},{level:3,title:"S3互換サービスでの設定",slug:"s3互換サービスでの設定",children:[]}]}],filePathRelative:"docs/admin/troubleshooting.md",git:{updatedTime:1641538666e3,contributors:[{name:"syuilo",email:"Syuilotan@yahoo.co.jp",commits:1},{name:"tamaina",email:"tamaina@hotmail.co.jp",commits:1}]},relatedPages:[{title:"Misskey構築の手引き",path:"/docs/install/manual.html",summary:"このガイドではMisskeyのインストール・セットアップ方法について解説します。"},{title:"Troubleshooting guide",path:"/en/docs/admin/troubleshooting.html",summary:""}]}}}]);