"use strict";(self.webpackChunkmisskey_hub=self.webpackChunkmisskey_hub||[]).push([[3742],{606:(e,s,a)=>{a.r(s),a.d(s,{default:()=>c});const n=(0,a(6252).uE)('<h1 id="dockerを使ったmisskey構築" tabindex="-1"><a class="header-anchor" href="#dockerを使ったmisskey構築" aria-hidden="true">#</a> Dockerを使ったMisskey構築</h1><p>このガイドはDockerを使ったMisskeyセットアップ方法を説明します。</p><div class="custom-container tip"><p class="custom-container-title">前提条件</p><ul><li>dockerおよびdocker-composeがインストールされていること。</li></ul></div><h2 id="リポジトリの取得" tabindex="-1"><a class="header-anchor" href="#リポジトリの取得" aria-hidden="true">#</a> リポジトリの取得</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone -b master git://github.com/misskey-dev/misskey.git\n<span class="token builtin class-name">cd</span> misskey\n<span class="token function">git</span> checkout master\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="設定" tabindex="-1"><a class="header-anchor" href="#設定" aria-hidden="true">#</a> 設定</h2><p>下記コマンドで、各種設定ファイルのサンプルをコピーします。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cp</span> .config/example.yml .config/default.yml\n<span class="token function">cp</span> .config/docker_example.env .config/docker.env\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>default.yml</code>と<code>docker.env</code>をファイル内の説明に従って編集してください。</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p><code>default.yml</code>の、Postgresql/Redisのホストはそれぞれ<code>db</code>/<code>redis</code>にしてください。</p></div><p>必要に応じて、<code>docker-compose.yml</code>を編集します。(ポートを変更したい場合など)</p><h2 id="ビルドと初期化" tabindex="-1"><a class="header-anchor" href="#ビルドと初期化" aria-hidden="true">#</a> ビルドと初期化</h2><p>次のコマンドでMisskeyのビルドとデータベースの初期化を行います。 これにはしばらく時間がかかります。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> docker-compose build\n<span class="token function">sudo</span> docker-compose run --rm web <span class="token function">yarn</span> run init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="起動" tabindex="-1"><a class="header-anchor" href="#起動" aria-hidden="true">#</a> 起動</h2><p>お疲れ様でした。以下のコマンドでMisskeyを起動できます。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> docker-compose up -d\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>GLHF!</p><h2 id="最新バージョンにアップデートする方法" tabindex="-1"><a class="header-anchor" href="#最新バージョンにアップデートする方法" aria-hidden="true">#</a> 最新バージョンにアップデートする方法</h2><ol><li><code>git stash</code></li><li><code>git checkout master</code></li><li><code>git pull</code></li><li><code>git submodule update --init</code></li><li><code>git stash pop</code></li><li><code>sudo docker-compose build</code></li><li><code>sudo docker-compose stop &amp;&amp; sudo docker-compose up -d</code></li></ol><h2 id="cliコマンドを実行する方法" tabindex="-1"><a class="header-anchor" href="#cliコマンドを実行する方法" aria-hidden="true">#</a> cliコマンドを実行する方法</h2><p><code>sudo docker-compose run --rm web node built/tools/mark-admin @example</code></p>',22),c={render:function(e,s){return n}}},755:(e,s,a)=>{a.r(s),a.d(s,{data:()=>n});const n={key:"v-f4c8fb2c",path:"/docs/install/docker.html",title:"Dockerを使ったMisskey構築",lang:"ja-JP",frontmatter:{},excerpt:"",headers:[{level:2,title:"リポジトリの取得",slug:"リポジトリの取得",children:[]},{level:2,title:"設定",slug:"設定",children:[]},{level:2,title:"ビルドと初期化",slug:"ビルドと初期化",children:[]},{level:2,title:"起動",slug:"起動",children:[]},{level:2,title:"最新バージョンにアップデートする方法",slug:"最新バージョンにアップデートする方法",children:[]},{level:2,title:"cliコマンドを実行する方法",slug:"cliコマンドを実行する方法",children:[]}],filePathRelative:"docs/install/docker.md",git:{updatedTime:1635518696e3,contributors:[{name:"syuilo",email:"Syuilotan@yahoo.co.jp",commits:5}]}}}}]);